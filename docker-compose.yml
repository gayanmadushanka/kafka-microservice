version: "3.7"

services:
  postgres:
    image: postgres:10.6-alpine
    container_name: postgres
    networks:
      - broker-kafka-network
    ports:
      - "5499:5432"
    environment:
      - POSTGRES_PASSWORD=postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    networks:
      - broker-kafka-network
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    networks:
      - broker-kafka-network
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_CLEANER_DELETE_RETENTION_MS: 5000
      KAFKA_BROKER_ID: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
      # KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    networks:
      - broker-kafka-network
    depends_on:
      - kafka
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  services.order:
    image: services.order
    container_name: services.order
    networks:
      - broker-kafka-network
    depends_on:
      - kafka
      - postgres
    ports:
      - "5001:5001"
    build:
      context: .
      dockerfile: Dockerfile.order

  services.orchestrator:
    image: services.orchestrator
    container_name: services.orchestrator
    networks:
      - broker-kafka-network
      - services-inventory-network
      - services-payment-network
    depends_on:
      - kafka
      - services.order
    ports:
      - "5002:5002"
    build:
      context: .
      dockerfile: Dockerfile.orchestrator

  services.inventory:
    image: services.inventory
    container_name: services.inventory
    networks:
      - services-inventory-network
    ports:
      - "5003:5003"
    build:
      context: ./src/Services.Inventory
      dockerfile: Dockerfile

  services.payment:
    image: services.payment
    container_name: services.payment
    networks:
      - services-payment-network
    ports:
      - "5004:5004"
    build:
      context: ./src/Services.Payment
      dockerfile: Dockerfile

networks:
  broker-kafka-network:
    driver: bridge

  services-inventory-network:
    driver: bridge

  services-payment-network:
    driver: bridge
